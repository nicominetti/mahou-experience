---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import { getLangFromUrl, getUrlWithoutLang, useTranslations, useTranslatedPath } from "@i18n/utils";

const isDev = import.meta.env.DEV;

const lang = getLangFromUrl(Astro.url);
const path = getUrlWithoutLang(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

let pages = [
	{
		title: "Home",
		url: "/",
	},
];

const { pathname } = Astro.url;
---

<header>
	<a href={translatePath("/")} aria-label="Home" class="logo absolute z-50 flex items-center">
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="200"
			height="120"
			viewBox="0 0 120 100"
			style="display: block; width: 200px; height: 120px; min-width: 200px;"
			fill="#980c23">
			<!-- Logo MAHOU con tamaÃ±o fijo -->
			<path d="M75.24-31.88c3.1-3.8,3-7.5,1.4-10.7-3.4,3.5-2.4,9.1-1.4,10.7ZM42.84-34.18v-7.7c-1.3,0-3.1,1.8-3.1,3.9s1.6,3.8,3.1,3.8ZM34.24-34.08q0-.1-.1-.2c-1.8-9.1,6.2-11.2,8.7-11.1h6v10.8c0,2.4,1.5,1.6,2.7.5v-11.1c0-3.9-3.3-3.6-3.3-3.6l4.6-3.9h.5c2.9,0,4.1,2.5,4.2,4.9v6.4s5.1-4.4,5.3-4.6c2.4.2,3.2,2,3.2,3.3v8.7c0,2.1,1.6,1.5,2.6.4-2-8.2,2.9-11.3,5.2-12.6l8.7,2.5c.2.4.4,1,.7,1.7,0,0,4.1-3.6,4.9-4.3,2,.3,3.1,1.6,3.3,3v9c0,2.6,1.3,1.7,2.2.9v-12.1h6v10.5c0,3,2.7,2.6,2.7,2.6-1,1-2.7,2.5-3.4,3.1-3-.1-4.4-1.5-5-2.9-.9.9-2.2,2.1-3.2,3-4.8.8-5.2-3.9-5.2-3.9v-7c0-1.1-1-.9-1.9-.9,1.2,8.1-3.7,11.7-7.2,11.9-3.6.3-5.8-1.8-7.1-3.4-1.7,1.5-3.7,3.4-3.7,3.4-3.2.4-5.4-1.3-5.4-4.1v-5.1c0-1.7-1.4-1.7-2.5-1.7v10.6h-6v-3.3s-1.1,1-3.7,3.4c-2.7.9-4.2-1.2-4.9-2.3-.5.4-.9.8-2.6,2.4-3.1,0-5-2.6-5.7-3.6v-.1l-4.3,3.7s-5.4,1.7-5.4-4.9v-11c0-1.7-1.2-1.9-2.4-1.9v17.5h-6.5v-15.6c0-1.6-1-2-2.4-2v17.6h-6.8v-14.7c0-3.8-3.2-3.5-3.2-3.5l4.5-4h1.7c1,0,3.6.8,3.6,3.1l3.6-3.1h1.8c1.4,0,3.6.9,3.6,3.2l3.7-3.2h1.7c1.3,0,3.6.8,3.6,3.2l.1,9.9v1.7c0,3.8,1.7,3.4,2.6,3,0,0-.1-.1-.1-.2"/>
			<!-- Estrellas -->
			<path d="M62.15,60.68l-2.2-6.8-2.2,6.8h-7.3l5.9,4.2-2.3,6.8,5.9-4.2,5.9,4.2-2.3-6.8,5.9-4.2h-7.3Z"/>
			<path d="M42.25,59.58l-1.9-5.7-1.9,5.7h-6.1l4.9,3.5-1.8,5.7,4.9-3.5,4.9,3.5-1.9-5.7,5-3.5h-6.1Z"/>
			<path d="M24.75,58.68l-1.6-4.8-1.6,4.8h-5.1l4.1,3-1.5,4.8,4.1-3,4.2,3-1.6-4.8,4.2-3h-5.2Z"/>
			<path d="M81.45,59.58l-1.9-5.7-1.9,5.7h-6.1l5,3.5-1.9,5.7,4.9-3.5,4.9,3.5-1.8-5.7,4.9-3.5h-6.1Z"/>
			<path d="M98.35,58.68l-1.6-4.8-1.6,4.8h-5.1l4.1,3-1.6,4.8,4.2-3,4.1,3-1.6-4.8,4.2-3h-5.1Z"/>
			<!-- Texto MAHOU -->
			<path d="M87.15,44.98c-1.2-2-2.4-8.9,1.8-13.2,1.9,4,2,8.6-1.8,13.2ZM47.55,42.08c-1.9,0-3.8-2.2-3.8-4.7s2.2-4.8,3.8-4.8v9.5ZM37.05,42.28v.2c-1,.5-3.1,1-3.1-3.7s0,.7,0-2.1v-12.2c0-2.9-2.9-3.9-4.5-3.9h-2.1l-4.4,3.9c0-2.8-2.7-3.9-4.4-3.9h-2.2l-4.4,3.8c0-2.8-3.2-3.8-4.4-3.8h-2.1L-.05,25.38s4-.4,4,4.5v18h8.1v-21.7c1.7,0,3,.4,3,2.5v19.2h8v-21.6c1.5,0,3,.3,3,2.3v13.4c0,8.1,6.5,6,6.5,6l5.2-4.6c.8,1.3,3.2,4.5,6.9,4.5,2-1.9,2.5-2.4,3.1-2.9.8,1.5,2.8,4,6,2.9,3.2-3,4.5-4.2,4.5-4.2v4.1h7.3v-13c1.4,0,3.1,0,3.1,2v6.3c0,3.4,2.6,5.5,6.6,5,0,0,2.4-2.3,4.5-4.2,1.5,2,4.2,4.5,8.6,4.2,4.3-.3,10.2-4.7,8.8-14.7,1,0,2.3-.3,2.3,1.1v8.7s.5,5.7,6.4,4.8c1.2-1.1,2.7-2.6,3.9-3.7.8,1.7,2.4,3.4,6.1,3.6.9-.8,2.9-2.6,4.2-3.9,0,0-3.3.5-3.3-3.1v-12.9h-7.3v14.9c-1.2,1.1-2.7,2.1-2.7-1v-11c-.1-1.8-1.6-3.3-4-3.7-.9.8-6,5.3-6,5.3-.3-.8-.6-1.6-.8-2.1l-10.4-3c-2.9,1.5-8.8,5.4-6.4,15.5-1.2,1.3-3.2,2.1-3.2-.5v-10.7c0-1.7-1.1-3.9-3.9-4.1-.2.2-6.4,5.7-6.4,5.7v-7.9c-.1-3-1.7-6.1-5.2-6.1h-.6l-5.5,4.8s4-.4,4,4.4v13.7c-1.4,1.4-3.3,2.3-3.3-.6v-13.3h-7.4c-3.1-.1-12.9,2.4-10.6,13.6v.3"/>
		</svg>
	</a>
	<div data-xdata="{ open: false }" class="navigation fixed right-0 top-0 z-40" data-xbind.class="{'w-full navbar-open': open}">
		<div class="ml-auto md:max-w-fit" data-xbind.class="{'max-w-3xl': open, 'max-w-[8rem]': !open }">
			<div class="mx-auto w-full">
				<div
					class="shadow-thick resizable nav-container squircle relative mx-auto flex w-full flex-col justify-center overflow-x-hidden bg-zinc-900 backdrop-blur-xl backdrop-filter md:flex-row-reverse">
					<div class="flex flex-row items-center justify-end md:hidden">
						<a class="px-3 py-[0.4rem] pl-4" href={translatePath("/contact/")} aria-label="Contact Page">
							<Icon class="text-white" name="octicon:mail-16" width="20" data-xbind.class="{'hidden': open}" />
						</a>
						<button
							data-xon.click="open = !open"
							data-xbind.style="{'padding-top': open ? '1rem' : '0.4rem'}"
							aria-label="Open navbar"
							class="inline-flex items-center justify-center px-3 py-[0.4rem] pr-4 text-white hover:text-blue-300 focus:text-white focus:outline-none">
							<svg class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
								<path
									data-xbind.class="{'hidden': open, 'inline-flex': !open }"
									class="inline-flex"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M4 6h16M4 12h16M4 18h16">
								</path>
								<path
									data-xbind.class="{'hidden': !open, 'inline-flex': open }"
									class="hidden"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M6 18L18 6M6 6l12 12">
								</path>
							</svg>
						</button>
					</div>
					<!-- <nav data-xbind.class="{'flex': open, 'hidden': !open}" class="hidden flex-grow flex-col justify-center py-12 md:flex md:py-0">
						<ul
							class="flex list-none flex-col items-end justify-center gap-2 px-2 text-center text-3xl md:flex-row md:items-center md:text-base">
							{
								pages.map((page) => (
									<li data-cursor-hover>
										<a
											href={translatePath(page.url)}
											class={`inline-block cursor-pointer px-1 py-[0.33rem] ${
												page.url === pathname ||
												page.url === pathname.replace(/^\/it|\/$/, "") ||
												(page.url === "/disenar" && (pathname.startsWith("/disenar") || pathname.startsWith("/it/disenar")))
													? "active"
													: ""
											}`}>
											<span class="menu-item-container inline-block">
												<span 
													class="menu-item px-4 py-1 font-semibold uppercase tracking-wide text-zinc-400 hover:text-white focus:text-white focus:shadow-none focus:outline-none"
													data-short={page.title.charAt(0)}>
													{page.title}
												</span>
											</span>
										</a>
									</li>
								))
							}							
						</ul>
					</nav> -->
				</div>
			</div>
		</div>
	</div>
</header>

<style>
	.navigation {
		mix-blend-mode: difference;
	}
	.navigation.navbar-open {
		mix-blend-mode: luminosity;
	}
	.navigation,
	.logo {
		padding: 1rem var(--base-padding-x);
	}
	@media (min-width: 768px) {
		.navigation,
		.logo {
			padding: 2rem var(--base-padding-x);
		}
	}
	.collapsed .menu-item {
		font-size: 0;
		padding: 0.25rem 1rem;
	}
	.collapsed .menu-item:after {
		content: attr(data-short);
		font-size: 16px;
		font-weight: 700;
		color: #ffffff;
		opacity: 1;
		text-transform: uppercase;
	}
	nav a .menu-item-container {
		border-radius: 0.45rem;
	}
	nav a.active .menu-item-container,
	nav a:hover .menu-item-container {
		transition: background-color 0.3s ease;
	}
	nav ul:not(.collapsed) a.active .menu-item-container {
		transition-duration: 0.5s;
		background: #aaa;
	}
	nav ul:not(.collapsed) a:hover .menu-item-container {
		background: #fff;
	}
	nav ul:not(.collapsed) a.active .menu-item-container .menu-item,
	nav ul:not(.collapsed) a:hover .menu-item-container .menu-item {
		color: #000;
	}
	nav ul.collapsed a.active .menu-item-container .menu-item,
	nav ul.collapsed a:hover .menu-item-container .menu-item {
		color: #fff;
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { DrawSVGPlugin } from "gsap/DrawSVGPlugin";

	gsap.registerPlugin(DrawSVGPlugin, ScrollTrigger);

	function init() {
		gsap.timeline({
			defaults: {
				duration: 1,
				ease: "power2.out",
			},
		})
			.from(".logo-svg path", { drawSVG: 0 })
			.to(".logo-svg path", { fill: "#000", duration: 2 }, "<+=0.5");

		let isHoveringMenu = false;
		let menuCollapsed = false;

		const pageLinksUl = document.querySelector("header .nav-container nav ul");

		if (!pageLinksUl) {
			return;
		}

		let menuCollapseTl = gsap
			.timeline({
				defaults: {
					ease: "back.inOut(1.7)",
					duration: 0.4,
				},
				paused: true,
				onStart: () => {
					pageLinksUl.classList.add("collapsed");
				},
			})
			.to("header .nav-container", { width: 125 })
			.to(
				pageLinksUl,
				{
					x: () => {
						const pathName = window.location.pathname;

						if (pathName === "/" || pathName === "/it/") {
							return "9.5rem";
						} else if (pathName.startsWith("/blog") || pathName.startsWith("/it/blog")) {
							return "3.5rem";
						}

						return "-3.5rem";
					},
				},
				"<",
			);

		const isTouchDevice = window.matchMedia("(hover: none)").matches;

		if (window.innerWidth >= 768 && !isTouchDevice) {
			function expandMenu() {
				menuCollapseTl.reverse();
				pageLinksUl?.classList.remove("collapsed");
				document.querySelector("header .navigation")?.classList.remove("collapsed");
				menuCollapsed = false;
			}

			function collapseMenu() {
				if (window.scrollY > 200) {
					menuCollapseTl.play();
					pageLinksUl?.classList.add("collapsed");
					document.querySelector("header .navigation")?.classList.add("collapsed");
					menuCollapsed = true;
				}
			}

			collapseMenu();

			const navContainer = document.querySelector(".nav-container") as HTMLElement;

			function mouseEnterHandler() {
				isHoveringMenu = true;
				expandMenu();
			}

			function mouseLeaveHandler() {
				isHoveringMenu = false;
				collapseMenu();
			}

			function handleScroll() {
				if (window.scrollY > 200 && !isHoveringMenu && !menuCollapsed) {
					collapseMenu();
				} else if (window.scrollY <= 200 && menuCollapsed) {
					expandMenu();
				}
			}

			navContainer?.removeEventListener("mouseenter", mouseEnterHandler);
			navContainer?.addEventListener("mouseenter", mouseEnterHandler);

			navContainer?.removeEventListener("mouseleave", mouseLeaveHandler);
			navContainer?.addEventListener("mouseleave", mouseLeaveHandler);

			window?.removeEventListener("scroll", handleScroll);
			window?.addEventListener("scroll", handleScroll);
		}
	}

	document.removeEventListener("DOMContentLoaded", init); // astro:page-load
	document.addEventListener("DOMContentLoaded", init); // astro:page-load
</script>

<style>
	/* Custom typography colors for Navigation */
	nav p:not([class*="text-"]) {
		color: #43526e !important;
	}

	nav h1:not([class*="text-"]), 
	nav h2:not([class*="text-"]), 
	nav h3:not([class*="text-"]), 
	nav h4:not([class*="text-"]), 
	nav h5:not([class*="text-"]), 
	nav h6:not([class*="text-"]) {
		color: #14142b !important;
	}

	nav a:not([class*="text-"]) {
		color: #3e31fa !important;
	}
</style>
