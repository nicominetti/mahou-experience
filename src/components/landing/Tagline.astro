---
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils";

const { class: className } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<!-- The best thing? It's all in one -->
<div id="smooth-wrapper" class:list={["section tagline-section relative bg-zinc-900 text-white", className]} data-cursor-hover>
	<div class="tagline-arrows">
		<svg
			stroke-linecap="round"
			class="h-[15rem] w-[15rem] rotate-45 md:w-[20rem] md:rotate-0 lg:w-[25rem]"
			stroke-linejoin="round"
			viewBox="0 0 550 330">
			<path
				id="tagline-arrow-path"
				fill="none"
				stroke="#fff"
				stroke-width="10"
				d="M8.5,7.8C46.3,67,121.7,185.5,265.5,185.9c42.8,0.1,120.5-55.9-25.2-120.3
	C79-5.8,177.6,164.1,222.3,207.7c59.1,49.9,83.8,62.1,162.6,96.8">
			</path>
			<path class="opacity-0" id="tagline-arrow" stroke="white" stroke-width="12" d="M465.7 172.9l47.1 6-29.8 33.3-17.3-39.3z"></path>
		</svg>
	</div>
	<div class="text col-span-12 flex justify-center font-light">
		<p id="services-tagline" class="max-w-5xl text-center text-4xl md:text-5xl lg:text-7xl">
			{t("tagline")}
		</p>
	</div>
</div>

<style>
	.text > p > :global(div) {
		background: linear-gradient(to right, rgb(255, 255, 255) 50%, rgb(37, 37, 37) 50%);
		background-size: 200% 100%;
		background-position-x: 100%;
		color: transparent;
		background-clip: text;
		-webkit-background-clip: text;
		line-height: 1.2;
		transition: background-position-x 0.3s ease-out; /* Transición suave para cambios abruptos */
	}

	/* Transition variables for smooth section ending */
	.tagline-section {
		--tagline-clip: 0;
		--tagline-radius: 0;
		clip-path: inset(var(--tagline-clip) round var(--tagline-radius));
		margin-top: -1px; /* Fix weird clip path behavior */
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { SplitText } from "gsap/SplitText";
	import { DrawSVGPlugin } from "gsap/DrawSVGPlugin";
	import { MotionPathPlugin } from "gsap/MotionPathPlugin";

	gsap.registerPlugin(ScrollTrigger, SplitText, DrawSVGPlugin, MotionPathPlugin);

	function init() {
		const linePath = document.querySelector("#tagline-arrow-path");

		gsap.set(linePath, { drawSVG: 0 });

		let otherQTl = gsap
			.timeline({
				scrollTrigger: {
					trigger: ".tagline-arrows",
					start: "center bottom",
					end: "center center",
					markers: false,
					scrub: 1,
				},
			})
			.to(
				linePath,
				{
					drawSVG: "100%",
				},
				"<",
			)
			.to(
				"#tagline-arrow",
				{
					opacity: 1,
					duration: 0.1,
				},
				"<",
			)
			.to(
				"#tagline-arrow",
				{
					motionPath: {
						path: "#tagline-arrow-path",
						align: "#tagline-arrow-path",
						alignOrigin: [0.5, 0.5],
						autoRotate: 30,
					},
				},
				0,
			);

		const split = new SplitText("#services-tagline", { type: "lines" });

		// Animación de texto simplificada y más predecible
		const textRevealTl = gsap.timeline({
			scrollTrigger: {
				trigger: ".tagline-section",
				start: "top 80%", // Comenzar temprano
				end: "20% center", // Terminar cuando el 20% superior esté en el centro
				scrub: 0.5, // Scrub más suave
				markers: false,
				onComplete: () => {
					// Asegurar que todo esté completamente blanco al finalizar
					split.lines.forEach((target) => {
						gsap.set(target, { backgroundPositionX: 0 });
					});
				}
			},
		});

		// Animar todas las líneas juntas para un efecto más cohesivo
		split.lines.forEach((target, index) => {
			textRevealTl.to(target, {
				backgroundPositionX: 0,
				ease: "power1.inOut",
				duration: 0.8,
			}, index * 0.02); // Delay mínimo entre líneas
		});

		// Fallback: Asegurar texto blanco cuando la sección esté completamente visible
		ScrollTrigger.create({
			trigger: ".tagline-section",
			start: "top 10%",
			onEnter: () => {
				split.lines.forEach((target) => {
					gsap.set(target, { 
						backgroundPositionX: 0,
						transition: "none" // Evitar conflictos con CSS transition
					});
				});
			},
			once: true, // Solo ejecutar una vez
			markers: false,
		});

		// Transition animation when Tagline section ends (similar to FAQ)
		gsap.to(".tagline-section", {
			scrollTrigger: {
				trigger: ".tagline-section",
				start: "bottom center",
				end: "bottom top",
				scrub: 1,
				markers: false, // Marcadores desactivados
			},
			"--tagline-clip": "2vw",
			"--tagline-radius": "5rem",
		});

		// Background transition back to white when leaving Tagline (entering Footer)
		gsap.timeline({
			scrollTrigger: {
				trigger: ".tagline-section",
				start: "bottom 80%",
				end: "bottom 60%",
				scrub: 1,
				markers: false,
				onEnter: () => {
					gsap.to("body", { backgroundColor: "#ffffff", duration: 0.8 });
				},
				onLeaveBack: () => {
					gsap.to("body", { backgroundColor: "#0f2145", duration: 0.8 });
				}
			}
		});
	}

	document.removeEventListener("DOMContentLoaded", init); // astro:page-load
	document.addEventListener("DOMContentLoaded", init); // astro:page-load
</script>
