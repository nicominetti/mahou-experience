---
import LinkBlend from "@components/global/LinkBlend.astro";
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<section id="hero" class="section home-dark-section hero min-h-screen" >
	<div class="mx-auto flex h-full flex-col py-4 lg:py-10">
		<div class="relative flex flex-1 flex-col justify-around rounded-lg pb-10 pt-20 lg:rounded-2xl">
			<div class="flex justify-center">
				<h1 class="text-center font-display text-5xl font-extrabold uppercase sm:text-7xl md:text-8xl lg:text-9xl">
					<span>{t("hero.title.main")}</span>
					<span class="rotator relative inline-flex h-20 w-full justify-center md:h-32 lg:h-64">
						<span>{t("hero.title.1")}</span>
						<span>{t("hero.title.2")}</span>
						<span>{t("hero.title.1")}</span>
					</span>
				</h1>
			</div>
				<div class="flex flex-col items-center gap-5 text-center lg:gap-10">
					<p class="mt-8 max-w-3xl font-mono  lg:text-2xl">
						{t("hero.subtitle")}
					</p>
					<div class="flex flex-col items-center justify-center gap-3 lg:col-start-1">
						<div class="squircle-bg rounded-lg bg-zinc-900" data-cursor-hover data-cursor-parallax>
							<a
								class="flex h-12 w-full max-w-64 flex-1 items-center justify-center px-6 py-3 text-xl text-white transition-all bg-custom-blue hover:bg-blue hover:opacity-80 sm:w-auto md:font-bold lg:h-12"
								aria-label="Crea tu camiseta"
								href="/disenar">
								{t("hero.cta")}
							</a>
						</div>
						<small>
							{t("or")}
							<LinkBlend id="smooth-scroll-services" isButton={true}>{t("hero.scroll")}</LinkBlend>
						</small>
					</div>
				</div>
		</div>
	</div>
</section>

<style>
	.hero {
		padding-bottom: 0;
		position: relative;
		border-radius: inherit;
		overflow: hidden;
	}
	.hero > div {
		grid-column: 1 / span 12;
	}

	/* Hero appearance */
	.hero h1,
	.hero h2,
	.hero h3 {
		margin: 0;
		color: #0f2145;
	}
	.hero h1 {
		margin: 0;
		position: relative;
		overflow: hidden;
		visibility: hidden;
	}	
	.hero p {
		color: #43526e;
	}
	.hero h1 > div {
		position: relative;
		margin: 0;
	}
	.hero :global(.split-parent) {
		overflow: hidden;
	}
	.hero :global(.split-child) {
		display: inline-block;
	}

	/* Text rotator */
	.rotator > span {
		position: absolute;
	}

	.rotator > span:not(:nth-child(1)) {
		opacity: 0;
	}

	/* Custom button styles */
	.btn-custom-blue {
		background-color: #3e31fa !important;
		color: white !important;
	}

	.btn-custom-blue:hover {
		background-color: #2d24c7 !important;
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { SplitText } from "gsap/SplitText";
	import { ScrollToPlugin } from "gsap/ScrollToPlugin";

	gsap.registerPlugin(ScrollTrigger, SplitText, ScrollToPlugin);

	function init() {
		const childSplit = new SplitText(".hero h1", {
			type: "lines",
			linesClass: "split-child",
		});
		const parentSplit = new SplitText(".hero h1", {
			type: "lines",
			linesClass: "split-parent",
		});

		gsap.timeline()
			.from(childSplit.lines, {
				duration: 1.5,
				yPercent: 100,
				ease: "power4",
				stagger: 0.1,
			})
			.set(".hero h1", { visibility: "visible" }, "<")
			.then(() => {
				const words = document.querySelectorAll(".hero .rotator > span");

				let rotatorTimeline = gsap.timeline({ repeat: -1 });
				rotatorTimeline.timeScale(0.5);

				for (let i = 0; i < words.length; i++) {
					let delay = i - 1;
					let wordTL = gsap.timeline();
					if (i !== 0) {
						gsap.set(words[i], { opacity: 1 });
						wordTL.from(words[i], { duration: 1, yPercent: 100, opacity: 0, ease: "power4.out" });
					} else {
						// Handle the first one specially
						delay += 1;
						gsap.set(words[0], { opacity: 1, yPercent: 0 });
					}

					if (i !== words.length - 1) {
						wordTL.to(words[i], { duration: 1, yPercent: -100, opacity: 0, ease: "power4.out" });
					}
					rotatorTimeline.add(wordTL, delay);
				}
			});

		// Smooth scroll to services section
		var smoothScrollButton = document.getElementById("smooth-scroll-services");
		smoothScrollButton?.addEventListener("click", function (e) {
			e.preventDefault();
			
			const servicesSection = document.getElementById("services");
			if (servicesSection) {
				// Use GSAP to animate the scroll position
				gsap.to(window, { 
					duration: 1.2, 
					scrollTo: servicesSection,
					ease: "power2.out" 
				});
			}
		});

		var goProjectsButton = document.getElementById("go-projects-button");
		goProjectsButton?.addEventListener("click", function () {
			gsap.to(window, { duration: 0.5, scrollTo: "#projects" });
		});
	}

	document.removeEventListener("DOMContentLoaded", init); // astro:page-load
	document.addEventListener("DOMContentLoaded", init); // astro:page-load
</script>
